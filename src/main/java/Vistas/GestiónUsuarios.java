
package Vistas;

import Interfaces.command.IInsert;
import Logic.command.DeleteUser;
import Logic.command.InsertUser;
import Logic.command.UpdatePaquete;
import Logic.command.UpdateUser;
import Model.User;
import database.CConexion;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import Model.LogicaUsuarios;
import Model.Paquete;
import java.awt.HeadlessException;
import java.time.LocalDate;
import java.time.ZoneId;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author juand
 */
public class GestiónUsuarios extends javax.swing.JFrame {
    private LogicaUsuarios logica = new LogicaUsuarios(); 
     private boolean modoEdicion = false; 
    /**
     * Creates new form Administrador
     */
    public GestiónUsuarios() {
        initComponents();
        setLocationRelativeTo (null);
        cargarusuarios();
       
    }
         private void cargarusuarios() {
       
        DefaultTableModel modelo = logica.mostrarUsuarios();
        users.setModel(modelo); 
    }
         public void limpiarCampos() {
    // Limpiar campos de texto
    txtIdUsuario.setText("");
    TxtNombre.setText("");
    TxtApellido.setText("");
    TxtNumerCelular.setText("");
    txtPassword.setText("");
    
    
    ComboRoles.setSelectedIndex(0);
    
   
    txtIdUsuario.requestFocus();
}
        private void cargarUsuarios() {
    // Asume que tienes un objeto de tipo `LogicaUsuarios` que carga los usuarios
    LogicaUsuarios logicaUsuarios = new LogicaUsuarios();
    DefaultTableModel modelo = logicaUsuarios.mostrarUsuarios();
    users.setModel(modelo);  // Establecer el nuevo modelo en la JTable
}
            // Método para validar campos
private boolean validarCampos() {
    String idUsuario = txtIdUsuario.getText();
    String nombre = TxtNombre.getText();
    String apellido = TxtApellido.getText(); 
    String numeroCelular = TxtNumerCelular.getText();
    String rol = ComboRoles.getSelectedItem().toString();
    String password = new String(txtPassword.getPassword());

    if (idUsuario.isEmpty() || nombre.isEmpty() || apellido.isEmpty() || 
        numeroCelular.isEmpty() || rol.isEmpty() || password.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Todos los campos son obligatorios para actualizar.");
        return false;
    }
    return true;
}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        BtnActualizar = new javax.swing.JButton();
        BtnBorrar = new javax.swing.JButton();
        BtnIngresar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        ComboRoles = new javax.swing.JComboBox<>();
        TxtNombre = new javax.swing.JTextField();
        TxtApellido = new javax.swing.JTextField();
        TxtNumerCelular = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtIdUsuario = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        jScrollPane1 = new javax.swing.JScrollPane();
        users = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        TxtId = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        BtnInicio = new javax.swing.JButton();
        BtnSiguiente = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Gestión Administrativa de Usuarios");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 16, -1, 40));

        BtnActualizar.setBackground(new java.awt.Color(255, 102, 0));
        BtnActualizar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BtnActualizar.setForeground(new java.awt.Color(255, 255, 255));
        BtnActualizar.setText("Actualizar");
        BtnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnActualizarActionPerformed(evt);
            }
        });
        jPanel2.add(BtnActualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, 120, 30));

        BtnBorrar.setBackground(new java.awt.Color(255, 51, 51));
        BtnBorrar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BtnBorrar.setForeground(new java.awt.Color(255, 255, 255));
        BtnBorrar.setText("Borrar");
        BtnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBorrarActionPerformed(evt);
            }
        });
        jPanel2.add(BtnBorrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 290, 140, 30));

        BtnIngresar.setBackground(new java.awt.Color(255, 255, 255));
        BtnIngresar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BtnIngresar.setForeground(new java.awt.Color(0, 0, 0));
        BtnIngresar.setText("Ingresar");
        BtnIngresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnIngresarActionPerformed(evt);
            }
        });
        jPanel2.add(BtnIngresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 290, 140, 30));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Nombre");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 70, 69, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Apellido");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 77, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Número Celular");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 140, -1, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Cédula");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 80, 61, -1));

        ComboRoles.setBackground(new java.awt.Color(255, 255, 255));
        ComboRoles.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ComboRoles.setForeground(new java.awt.Color(0, 0, 0));
        ComboRoles.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione un rol", "Repartidor" }));
        jPanel2.add(ComboRoles, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, 580, 50));

        TxtNombre.setBackground(new java.awt.Color(255, 255, 255));
        TxtNombre.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        TxtNombre.setForeground(new java.awt.Color(0, 0, 0));
        TxtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtNombreActionPerformed(evt);
            }
        });
        jPanel2.add(TxtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 100, 260, 31));

        TxtApellido.setBackground(new java.awt.Color(255, 255, 255));
        TxtApellido.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        TxtApellido.setForeground(new java.awt.Color(0, 0, 0));
        TxtApellido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtApellidoActionPerformed(evt);
            }
        });
        jPanel2.add(TxtApellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 260, 31));

        TxtNumerCelular.setBackground(new java.awt.Color(255, 255, 255));
        TxtNumerCelular.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        TxtNumerCelular.setForeground(new java.awt.Color(0, 0, 0));
        TxtNumerCelular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtNumerCelularActionPerformed(evt);
            }
        });
        jPanel2.add(TxtNumerCelular, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 170, 260, 30));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Roles");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, -1, -1));

        txtIdUsuario.setBackground(new java.awt.Color(255, 255, 255));
        txtIdUsuario.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtIdUsuario.setForeground(new java.awt.Color(0, 0, 0));
        txtIdUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdUsuarioActionPerformed(evt);
            }
        });
        jPanel2.add(txtIdUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 100, 260, 30));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("Contraseña");
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 150, -1, -1));

        txtPassword.setBackground(new java.awt.Color(255, 255, 255));
        txtPassword.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtPassword.setForeground(new java.awt.Color(0, 0, 0));
        jPanel2.add(txtPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 170, 260, 30));

        users.setBackground(new java.awt.Color(255, 255, 255));
        users.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        users.setForeground(new java.awt.Color(0, 0, 0));
        users.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Cedula", "Nombre", "Apellido", "Telefono", "Contraseña", "Roles"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        users.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                usersMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(users);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 330, 890, 190));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("Id");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, -1, -1));

        TxtId.setBackground(new java.awt.Color(255, 255, 255));
        TxtId.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        TxtId.setForeground(new java.awt.Color(0, 0, 0));
        jPanel2.add(TxtId, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 230, 30));

        jLabel7.setIcon(new javax.swing.ImageIcon("C:\\Users\\juand\\OneDrive\\Desktop\\SafeTracking\\src\\main\\java\\Resources\\Imagenes\\Simple Lined White Login Page Wireframe Website UI Prototype.png")); // NOI18N
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 920, 570));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, 920, 570));

        BtnInicio.setBackground(new java.awt.Color(255, 255, 255));
        BtnInicio.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BtnInicio.setForeground(new java.awt.Color(0, 0, 0));
        BtnInicio.setText("Inicio");
        BtnInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnInicioActionPerformed(evt);
            }
        });
        jPanel1.add(BtnInicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 610, -1, -1));

        BtnSiguiente.setBackground(new java.awt.Color(255, 255, 255));
        BtnSiguiente.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BtnSiguiente.setForeground(new java.awt.Color(0, 0, 0));
        BtnSiguiente.setText("Siguiente");
        BtnSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSiguienteActionPerformed(evt);
            }
        });
        jPanel1.add(BtnSiguiente, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 610, -1, -1));

        jLabel6.setIcon(new javax.swing.ImageIcon("C:\\Users\\juand\\OneDrive\\Desktop\\SafeTracking\\src\\main\\java\\Resources\\Imagenes\\UI Login Page Desktop Prototype (1).png")); // NOI18N
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(-20, 0, 1110, 650));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1090, 650));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnActualizarActionPerformed
      try {
       
        if (!validarCampos()) {
            return;
        }
        
        int id = Integer.parseInt( TxtId.getText());
        String idUser = txtIdUsuario.getText();
        String nome = TxtNombre.getText();
        String lastname = TxtApellido.getText(); 
        String phone = TxtNumerCelular.getText();  
        String role = (String) ComboRoles.getSelectedItem();  
        String password = new String(txtPassword.getPassword());

      

        
        User usuarioActualizado = new User(nome, idUser, id , phone, password, role, lastname);
        
      
        UpdateUser updater = new UpdateUser();
        updater.update(usuarioActualizado);
        
       
        cargarUsuarios();
        
       
        int filaSeleccionada = users.getSelectedRow();
        
       
        if (filaSeleccionada != -1) {
           
            actualizarFilaTabla(filaSeleccionada, idUser, nome, lastname, phone, role, password);
        }
        
      
        JOptionPane.showMessageDialog(this, "Usuario actualizado correctamente.");
        
        
        limpiarCampos();
        modoEdicion = false;
        
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Error al actualizar el usuario: " + e.getMessage());
    } catch (HeadlessException e) {
        JOptionPane.showMessageDialog(this, "Ocurrió un error inesperado: " + e.getMessage());
    }

    }//GEN-LAST:event_BtnActualizarActionPerformed

    private void BtnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBorrarActionPerformed
            String cedula = txtIdUsuario.getText();

    if (cedula.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Por favor ingresa el número de cédula.");
        return;
    }

    User user = new User();
    user.setIdUser(cedula); // Asigna la cédula al ID del usuario.

    DeleteUser deleteUser = new DeleteUser();

    try {
        deleteUser.delete(user); // Usa la instancia correcta para eliminar.
        JOptionPane.showMessageDialog(this, "Usuario eliminado exitosamente.");
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error al intentar eliminar el usuario: " + e.getMessage());
    }

    cargarUsuarios(); // Recarga la tabla de usuarios
    }//GEN-LAST:event_BtnBorrarActionPerformed

    private void BtnIngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnIngresarActionPerformed
        
      Connection cx = null;
    PreparedStatement st = null;

    try {
        // Obtener valores de los campos
        String cedula = txtIdUsuario.getText().trim();
        String nombre = TxtNombre.getText().trim();
        String apellido = TxtApellido.getText().trim();
        String numeroCelular = TxtNumerCelular.getText().trim();
        String contraseña = txtPassword.getText().trim();
        String roles = ComboRoles.getSelectedItem().toString().trim();

        // Validar que los campos no estén vacíos
        if (cedula.isEmpty() || nombre.isEmpty() || apellido.isEmpty() ||
            numeroCelular.isEmpty() || contraseña.isEmpty() || roles.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Todos los campos son obligatorios.");
            return;
        }

        cx = CConexion.conecarDB();
        String sql;

        if (modoEdicion) {
            // Actualizar datos de usuario existente
            sql = "UPDATE users SET nome = ?, lastname = ?, phone = ?, password = ?, role = ? WHERE idUser = ?";
            st = cx.prepareStatement(sql);
            st.setString(1, nombre);
            st.setString(2, apellido);
            st.setString(3, numeroCelular);
            st.setString(4, contraseña);
            st.setString(5, roles);
            st.setString(6, cedula);
            st.executeUpdate();

            // Actualizar la fila en la tabla
            int filaSeleccionada = users.getSelectedRow();
            if (filaSeleccionada != -1) {
                users.setValueAt(cedula, filaSeleccionada, 1);
                users.setValueAt(nombre, filaSeleccionada, 2);
                users.setValueAt(apellido, filaSeleccionada, 3);
                users.setValueAt(numeroCelular, filaSeleccionada, 4);
                users.setValueAt(contraseña, filaSeleccionada, 5);
                users.setValueAt(roles, filaSeleccionada, 6);
            }

            JOptionPane.showMessageDialog(this, "Usuario actualizado correctamente.");
        } else {
            // Insertar nuevo usuario
            sql = "INSERT INTO users (idUser, nome, lastname, phone, password, role) VALUES (?, ?, ?, ?, ?, ?)";
            st = cx.prepareStatement(sql);
            st.setString(1, cedula);
            st.setString(2, nombre);
            st.setString(3, apellido);
            st.setString(4, numeroCelular);
            st.setString(5, contraseña);
            st.setString(6, roles);
            st.executeUpdate();

            // Agregar nuevo usuario a la tabla
            DefaultTableModel model = (DefaultTableModel) users.getModel();
            model.addRow(new Object[]{null, cedula, nombre, apellido, numeroCelular, contraseña, roles});

            JOptionPane.showMessageDialog(this, "Usuario registrado correctamente.");
        }

        // Limpiar los campos después de guardar
        limpiarCampos();
        modoEdicion = false;

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Error al guardar los datos: " + e.getMessage());
    } finally {
        try {
            if (st != null) st.close();
            if (cx != null) cx.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error al cerrar la conexión: " + e.getMessage());
        }
    }             
    }//GEN-LAST:event_BtnIngresarActionPerformed

    private void TxtApellidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtApellidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtApellidoActionPerformed

    private void TxtNumerCelularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtNumerCelularActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtNumerCelularActionPerformed

    private void txtIdUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdUsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdUsuarioActionPerformed

    private void usersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_usersMouseClicked
        // También deberías agregar un MouseListener a la tabla para seleccionar los datos

    int fila = users.getSelectedRow();
    if (fila != -1) {
        TxtId.setText(users.getValueAt(fila, 0).toString());
        txtIdUsuario.setText(users.getValueAt(fila, 1).toString()); // Cedula
        TxtNombre.setText(users.getValueAt(fila, 2).toString());    // Nombre
        TxtApellido.setText(users.getValueAt(fila, 3).toString());  // Apellido
        TxtNumerCelular.setText(users.getValueAt(fila, 4).toString()); // Teléfono
        txtPassword.setText(users.getValueAt(fila, 5).toString());   // Contraseña
        ComboRoles.setSelectedItem(users.getValueAt(fila, 6).toString()); // Rol
        
        
    }

      
    }//GEN-LAST:event_usersMouseClicked

    private void TxtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtNombreActionPerformed

    private void BtnInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnInicioActionPerformed
        Login ventanaLogin = new Login();
    ventanaLogin.setVisible(true);
    this.dispose(); 
    }//GEN-LAST:event_BtnInicioActionPerformed

    private void BtnSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSiguienteActionPerformed
        GestionPaquete ventanaGestionPaquete = new GestionPaquete();
    ventanaGestionPaquete.setVisible(true);
    this.dispose(); 
    }//GEN-LAST:event_BtnSiguienteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestiónUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestiónUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestiónUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestiónUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GestiónUsuarios().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnActualizar;
    private javax.swing.JButton BtnBorrar;
    private javax.swing.JButton BtnIngresar;
    private javax.swing.JButton BtnInicio;
    private javax.swing.JButton BtnSiguiente;
    private javax.swing.JComboBox<String> ComboRoles;
    private javax.swing.JTextField TxtApellido;
    private javax.swing.JTextField TxtId;
    private javax.swing.JTextField TxtNombre;
    private javax.swing.JTextField TxtNumerCelular;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtIdUsuario;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTable users;
    // End of variables declaration//GEN-END:variables

   private void actualizarFilaTabla(int fila, String idUsuario, String nombre, String apellido,
                                  String numeroCelular, String rol, String password) {
    // Verificar si el modelo de la tabla es un DefaultTableModel
    DefaultTableModel model = (DefaultTableModel) users.getModel();

    // Actualizar los valores de la fila en el modelo
    model.setValueAt(idUsuario, fila, 1);  // Asumí que la cédula (idUsuario) está en la columna 1
    model.setValueAt(nombre, fila, 2);     // Nombre en columna 2
    model.setValueAt(apellido, fila, 3);   // Apellido en columna 3
    model.setValueAt(numeroCelular, fila, 4);  // Número celular en columna 4
    model.setValueAt(rol, fila, 5);        // Rol en columna 5
    model.setValueAt(password, fila, 6);    // Contraseña en columna 6

    // Si el modelo es de tipo DefaultTableModel, puedes usar este método para actualizar visualmente
    model.fireTableCellUpdated(fila, 1);  // Esto asegura que la celda actualizada se repinte correctamente
    model.fireTableCellUpdated(fila, 2);
    model.fireTableCellUpdated(fila, 3);
    model.fireTableCellUpdated(fila, 4);
    model.fireTableCellUpdated(fila, 5);
    model.fireTableCellUpdated(fila, 6);
}


   
    
}
